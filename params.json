{
  "name": "Rumal docker",
  "tagline": "A docker container with a ready to run rumal instance",
  "body": "# rumal_docker\r\nA docker container with a ready to run rumal instance\r\n\r\n\r\n# Installation \r\n\r\nSystem-wide requirements\r\n* Docker \r\n* git\r\n\r\n    \r\n**Docker:**\r\n\r\nYou will need docker to be able to build dockefiles, follow the instructions on [this link](https://docs.docker.com/engine/installation/) on your respective system. You will need to be able to run the command ```docker-compose```.\r\n\r\n\r\n**Cloning and building Dockerfile**\r\n```sh\r\n$ git clone  https://github.com/thugs-rumal/rumal_docker.git\r\n$ cd rumal_docker\r\n$ docker-compose build \r\n```\r\n\r\n**Run**\r\n\r\nThe following command will create ```rumaldocker_backend_1``` and ```rumaldocker_frontend_1``` and run the two containers\r\n```sh\r\n$ docker-compose up \r\n```\r\nYour instance of rumal-thug is now ready to use. \r\n\r\nRumal backend is running on (IP):8000/admin.  \r\nRumal front end will be running on (IP):8080.\r\n\r\n# Connection\r\n\r\n* **Windows:**  \r\n    Go to [192.168.99.100:8080](http://192.168.99.100:8080) to access Rumal. This IP address might be different for you, see **Find default IP address** if it doesnâ€™t work.\r\n\r\n* **Ubuntu:**  \r\n    [127.0.0.1:8080](http://127.0.0.1:8080) should work to access Rumal.  \r\n\r\n* **Login:**    \r\n    *Default user*: admin  \r\n    *Default password*: admin  \r\n\r\n\r\n\r\n\r\n**Find default IP address:**\r\n\r\nDocker is configured to use the default machine with IP <192.168.99.100>(This is the IP address you use to connect to server).  \r\nIP address can be found by running this on your host machine: \r\n```sh\r\n$ docker-machine ip\r\n```  \r\nOR  \r\nThe IP address displayed at the top of the Docker Quick start Terminal\r\n\r\n# Tests\r\nThis has been tested on :  \r\n-  Windows 10 / Docker version 1.11.0\r\n-  Ubuntu 16.04 Desktop / Docker version 1.11.0\r\n\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}